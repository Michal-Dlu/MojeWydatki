name: Tests

on:
  push:
    branches:
      - master
      - '*.x'
  pull_request:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [8.2, 8.3, 8.4]

    name: PHP ${{ matrix.php }}

    env:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: test_database
      DB_USERNAME: root
      DB_PASSWORD: ""

    services:
      mysql:
        image: mysql:8.0
        options: --health-cmd="mysqladmin ping --silent" --health-timeout=5s --health-interval=5s --health-retries=5
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, pdo_mysql
          coverage: none

      - name: Show PHP version
        run: php -v

      - name: Clear Composer Cache
        run: composer clear-cache

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache
            ~/.cache/composer
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Prepare environment
        run: |
          cp .env.example .env
          # Upewnij się, że CI używa MySQL
          sed -i 's/^DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env || true
          sed -i 's/^DB_HOST=.*/DB_HOST=127.0.0.1/' .env || true
          sed -i 's/^DB_PORT=.*/DB_PORT=3306/' .env || true
          sed -i 's|^DB_DATABASE=.*|DB_DATABASE=test_database|' .env || true
          sed -i 's/^DB_USERNAME=.*/DB_USERNAME=root/' .env || true
          sed -i 's/^DB_PASSWORD=.*/DB_PASSWORD=/' .env || true

      - name: Generate app key
        run: php artisan key:generate --ansi

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h127.0.0.1 --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run migrations
        run: php artisan migrate --force --no-interaction

      - name: Execute tests
        run: php artisan test 
